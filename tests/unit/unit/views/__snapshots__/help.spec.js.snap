// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`help.vue > should be rendered properly 1`] = `
VueWrapper {
  "_emitted": {
    "hook:beforeCreate": [
      [],
    ],
    "hook:beforeMount": [
      [],
    ],
    "hook:created": [
      [],
    ],
    "hook:mounted": [
      [],
    ],
    "hook:renderTracked": [
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:beforeCreate",
    },
    {
      "args": [],
      "name": "hook:created",
    },
    {
      "args": [],
      "name": "hook:beforeMount",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:renderTracked",
    },
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;

exports[`help.vue should be rendered properly 1`] = `
<div class="help-container">
  <div class="header">
    <div class="title">some specific text</div>
    <div class="description"><span>some specific text</span> <img src="test-file-stub" title="Winking Face"></div>
  </div>
  <div class="content">
    <div style="height: 0px;">
      <unnnicaccordion title="some specific text" class="question">
        <!---->
        <dynamic-stub template="<span>some specific text</span>"></dynamic-stub>
      </unnnicaccordion>
      <unnnicaccordion title="some specific text" class="question">
        <unnnicbutton slot="actions" type="secondary" size="small" iconleft="button-play-1">
          some specific text
        </unnnicbutton>
        <dynamic-stub template="<span>some specific text</span>"></dynamic-stub>
      </unnnicaccordion>
      <unnnicaccordion title="some specific text" class="question">
        <unnnicbutton slot="actions" type="secondary" size="small" iconleft="button-play-1">
          some specific text
        </unnnicbutton>
        <dynamic-stub template="<span>some specific text</span>"></dynamic-stub>
      </unnnicaccordion>
      <unnnicaccordion title="some specific text" class="question">
        <!---->
        <dynamic-stub template="<span>some specific text</span>"></dynamic-stub>
      </unnnicaccordion>
      <unnnicaccordion title="some specific text" class="question">
        <unnnicbutton slot="actions" type="secondary" size="small" iconleft="button-play-1">
          some specific text
        </unnnicbutton>
        <dynamic-stub template="<span>some specific text</span>"></dynamic-stub>
      </unnnicaccordion>
      <unnnicaccordion title="some specific text" class="question">
        <unnnicbutton slot="actions" type="secondary" size="small" iconleft="button-play-1">
          some specific text
        </unnnicbutton>
        <dynamic-stub template="<span>some specific text</span>"></dynamic-stub>
      </unnnicaccordion>
      <unnnicaccordion title="some specific text" class="question">
        <!---->
        <dynamic-stub template="<span>some specific text</span>"></dynamic-stub>
      </unnnicaccordion>
      <unnnicaccordion title="some specific text" class="question">
        <!---->
        <dynamic-stub template="<span>some specific text</span>"></dynamic-stub>
      </unnnicaccordion>
      <unnnicaccordion title="some specific text" class="question">
        <unnnicbutton slot="actions" type="secondary" size="small" iconleft="button-play-1">
          some specific text
        </unnnicbutton>
        <dynamic-stub template="<span>some specific text</span>"></dynamic-stub>
      </unnnicaccordion>
      <unnnicaccordion title="some specific text" class="question">
        <!---->
        <dynamic-stub template="<span>some specific text</span>"></dynamic-stub>
      </unnnicaccordion>
    </div>
  </div>
</div>
`;
