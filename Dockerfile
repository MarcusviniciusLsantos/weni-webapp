FROM node:14-alpine as builder

WORKDIR /home/app

RUN apk --no-cache update && \
    apk --no-cache add git yarn && \
    yarn global add @vue/cli

COPY package.json yarn.lock ./

RUN --mount=type=cache,target=/root/.yarn \
    YARN_CACHE_FOLDER=/root/.yarn yarn install

COPY . .

ARG VUE_APP_ROOT_API
ARG KEYCLOAK_ISSUER
ARG KEYCLOAK_AUTHORIZATION_ENDPOINT
ARG KEYCLOAK_USERINFO_ENDPOINT
ARG KEYCLOAK_END_SESSION_ENDPOINT
ARG KEYCLOAK_JWKS_URI
ARG KEYCLOAK_TOKEN_ENDPOINT
ARG KEYCLOAK_CHECK_SESSION_IFRAME
ARG KEYCLOAK_CLIENT_ID
ARG KEYCLOAK_REALM
ARG VUE_APP_HOTJAR_PROJECT_KEY
ARG VUE_APP_BOT_URL
ARG VUE_APP_SENTRY_DSN_ENDPOINT
ARG VUE_APP_HELPHERO
ARG VUE_APP_STRIPE_API
ARG LOGROCKET_ID
ARG LOGROCKET_CHILD_DOMAINS
ARG VUE_APP_URL_ACADEMY
ARG MP9_AB_MAPPING_TOKEN

ENV VUE_APP_ROOT_API "${VUE_APP_ROOT_API}"
ENV KEYCLOAK_ISSUER "${KEYCLOAK_ISSUER}"
ENV KEYCLOAK_AUTHORIZATION_ENDPOINT "${KEYCLOAK_AUTHORIZATION_ENDPOINT}"
ENV KEYCLOAK_USERINFO_ENDPOINT "${KEYCLOAK_USERINFO_ENDPOINT}"
ENV KEYCLOAK_END_SESSION_ENDPOINT "${KEYCLOAK_END_SESSION_ENDPOINT}"
ENV KEYCLOAK_JWKS_URI "${KEYCLOAK_JWKS_URI}"
ENV KEYCLOAK_TOKEN_ENDPOINT "${KEYCLOAK_TOKEN_ENDPOINT}"
ENV KEYCLOAK_CHECK_SESSION_IFRAME "${KEYCLOAK_CHECK_SESSION_IFRAME}"
ENV KEYCLOAK_CLIENT_ID "${KEYCLOAK_CLIENT_ID}"
ENV KEYCLOAK_REALM "${KEYCLOAK_REALM}"
ENV VUE_APP_HOTJAR_PROJECT_KEY "${VUE_APP_HOTJAR_PROJECT_KEY}"
ENV VUE_APP_BOT_URL "${VUE_APP_BOT_URL}"
ENV VUE_APP_SENTRY_DSN_ENDPOINT "${VUE_APP_SENTRY_DSN_ENDPOINT}"
ENV VUE_APP_HELPHERO "${VUE_APP_HELPHERO}"
ENV VUE_APP_STRIPE_API "${VUE_APP_STRIPE_API}"
ENV LOGROCKET_ID "${LOGROCKET_ID}"
ENV LOGROCKET_CHILD_DOMAINS "${LOGROCKET_CHILD_DOMAINS}"
ENV VUE_APP_URL_ACADEMY "${VUE_APP_URL_ACADEMY}"
ENV MP9_AB_MAPPING_TOKEN "${MP9_AB_MAPPING_TOKEN}"

RUN yarn build

FROM nginx:1.24-alpine

ENV APP_USER=app \
    APP_GROUP=app \
    USER_ID=1999 \
    GROUP_ID=1999

RUN addgroup --system --gid ${GROUP_ID} ${APP_GROUP} \
    && adduser --system --disabled-password --home /home/${APP_USER} \
    --uid ${USER_ID} --ingroup ${APP_GROUP} ${APP_USER}

COPY nginx.conf /etc/nginx/nginx.conf
COPY --from=builder --chown=${APP_USER}:${APP_GROUP} /home/app/dist /usr/share/nginx/html/connect

COPY docker-entrypoint.sh /usr/share/nginx/

WORKDIR /home/app

USER ${APP_USER}:${APP_GROUP}

EXPOSE 8080
ENTRYPOINT ["/usr/share/nginx/docker-entrypoint.sh"]

CMD ["nginx", "-g", "daemon off;"]

